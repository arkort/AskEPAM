//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AskEpamClientApplication.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IAskService", CallbackContract=typeof(AskEpamClientApplication.ServiceReference1.IAskServiceCallback))]
    public interface IAskService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAskService/Handshake", ReplyAction="http://tempuri.org/IAskService/HandshakeResponse")]
        void Handshake(string user);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAskService/AskQuestion")]
        void AskQuestion(string asker, int area, string question);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAskService/ListQuestions")]
        void ListQuestions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAskService/GetAreas", ReplyAction="http://tempuri.org/IAskService/GetAreasResponse")]
        AskEpamWCFService.Entities.Skill[] GetAreas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAskService/UpdateSkill", ReplyAction="http://tempuri.org/IAskService/UpdateSkillResponse")]
        void UpdateSkill(string user, int skill);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAskService/GetAnswerFromClient")]
        void GetAnswerFromClient(int id, string answer, string answerer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAskServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAskService/SendAnswerToClient")]
        void SendAnswerToClient(string answer, string answerer);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAskService/AskClient")]
        void AskClient(int id, string question);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAskService/SendListQuestionsToClient")]
        void SendListQuestionsToClient(AskEpamWCFService.Entities.Question[] list);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAskServiceChannel : AskEpamClientApplication.ServiceReference1.IAskService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AskServiceClient : System.ServiceModel.DuplexClientBase<AskEpamClientApplication.ServiceReference1.IAskService>, AskEpamClientApplication.ServiceReference1.IAskService {
        
        public AskServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public AskServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public AskServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AskServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AskServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Handshake(string user) {
            base.Channel.Handshake(user);
        }
        
        public void AskQuestion(string asker, int area, string question) {
            base.Channel.AskQuestion(asker, area, question);
        }
        
        public void ListQuestions() {
            base.Channel.ListQuestions();
        }
        
        public AskEpamWCFService.Entities.Skill[] GetAreas() {
            return base.Channel.GetAreas();
        }
        
        public void UpdateSkill(string user, int skill) {
            base.Channel.UpdateSkill(user, skill);
        }
        
        public void GetAnswerFromClient(int id, string answer, string answerer) {
            base.Channel.GetAnswerFromClient(id, answer, answerer);
        }
    }
}
